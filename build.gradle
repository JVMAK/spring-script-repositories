plugins {
    id "com.jfrog.bintray" version "1.7"
    id 'java-library'
    id 'maven-publish'
}

group = 'com.haulmont.scripting'
version = '0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
    mavenCentral() 
}

jar {
    baseName = project.getName()
    version =  project.getVersion()
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadocJar.dependsOn javadoc

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.getGroup()
            artifactId project.getName()
            version project.getVersion()

            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

dependencies {
    compile "org.codehaus.groovy:groovy-jsr223:2.5.2"

    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "org.slf4j:log4j-over-slf4j:1.7.25"
    compile "org.jooq:joor-java-8:0.9.9"
    
    compile "org.springframework:spring-core:4.3.19.RELEASE"
    compile "org.springframework:spring-beans:4.3.19.RELEASE"
    compile "org.springframework:spring-context-support:4.3.19.RELEASE"

    testCompile "org.hsqldb:hsqldb:2.4.1"
    testCompile "org.springframework:spring-test:4.3.19.RELEASE"
    testCompile "org.apache.commons:commons-lang3:3.8"
    testCompile "junit:junit:4.12"
    testCompile "org.jmockit:jmockit:1.43"
}

test {
    jvmArgs "-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}"
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    configurations = ['archives']

    // make files public ?
    publish = true
    // override existing artifacts?
    override = false

    // metadata
    pkg {
        repo = 'labs'           // your repository name
        name = 'spring-script-repositories'  // package name - it will be created upon upload

        // organization name, if your repository is created inside an organization.
        // remove this parameter if you don't have an organization
        userOrg = 'cuba-platform'

        websiteUrl = 'https://github.com/cuba-rnd/spring-script-repositories'
        issueTrackerUrl = 'https://github.com/cuba-rnd/spring-script-repositories/issues'
        vcsUrl = 'https://github.com/cuba-rnd/spring-script-repositories.git' // Mandatory for Open Source projects
        licenses = ["Apache-2.0"]
        labels = ['spring', 'scripting', 'opensource']
    }
}
